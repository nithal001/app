{
  "name": "css-shorthand-properties",
  "description": "A simple list of CSS shorthand properties and which longhand properties they expand to",
  "keywords": [
    "css",
    "shorthand",
    "short",
    "list"
  ],
  "version": "1.0.0",
  "author": {
    "name": "Gilmore Davidson"
  },
  "homepage": "https://github.com/gilmoreorless/css-shorthand-properties",
  "repository": {
    "type": "git",
    "url": "git://github.com/gilmoreorless/css-shorthand-properties.git"
  },
  "main": "index.js",
  "licenses": [
    {
      "type": "MIT",
      "url": "http://gilmoreorless.mit-license.org/"
    }
  ],
  "readme": "# CSS Shorthand Properties\n\nA simple way to list all [shorthand](http://www.w3.org/TR/CSS2/about.html#shorthand) CSS properties and which properties they expand to.\n\nI tried to search for an existing simple list but couldn't find one, so I trawled through the various [W3C CSS specs](http://www.w3.org/Style/CSS/current-work) and collated the data.\n\nOnly specs that are Candidate Recommendations or better are counted, with the exception of some Working Drafts that have a lot of traction in browser implementations. So far the WD specs included here are Animation, Transitions and Flexbox.\n\n## Usage\n\nAvailable on npm as `css-shorthand-properties`, or in the browser as a global called `cssShorthandProps`\n\n### Properties\n\n#### shorthandProperties\n\nThe core data as a simple JS object. Each key is a CSS shorthand property. Each value is a compacted list of CSS properties that the shorthand expands to.\n\nThere is a convenience method (listed below) that means you shouldn’t need to access this list directly, but it’s available for other use cases.\n\n\n### Methods\n\n#### expand\n\n* Takes a CSS shorthand property and returns a list of longhand properties\n* **Parameters**:\n\t* `property` _(String)_ Shorthand property to expand.\n\t* `recurse` _(Boolean – optional, default `false`)_ If true, each longhand property will also be run through `expand()`. This is only useful for the `border` property.\n* **Returns**: _Array_ with a list of longhand properties that the given property expands to. If the property is not a shorthand, the array contains only the original property.\n\n```js\n// Standard usage\ncssShorthandProps.expand('list-style');\n// ['list-style-type', 'list-style-position', 'list-style-image']\n\n// Non-shorthand properties return themselves in an array\ncssShorthandProps.expand('color');\n// ['color']\n\n// Using 'border' in normal mode...\ncssShorthandProps.expand('border');\n// ['border-width', 'border-style', 'border-color']\n\n// ...but the border properties are also shorthands\ncssShorthandProps.expand('border-width');\n// ['border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width']\n\n// Using 'border' with recursion returns an array of arrays\ncssShorthandProps.expand('border', true);\n/*\n[\n  ['border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width'],\n  ['border-top-style', 'border-right-style', 'border-bottom-style', 'border-left-style'],\n  ['border-top-color', 'border-right-color', 'border-bottom-color', 'border-left-color']\n]\n*/\n```\n\n## Licence\n\nMIT: [http://gilmoreorless.mit-license.org/]()\n\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/gilmoreorless/css-shorthand-properties/issues"
  },
  "_id": "css-shorthand-properties@1.0.0",
  "_from": "css-shorthand-properties@1.0.x"
}
